[{"data":1,"prerenderedAt":278},["ShallowReactive",2],{"content-query-kqlmPL7wem":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"body":10,"_type":272,"_id":273,"_source":274,"_file":275,"_stem":276,"_extension":277},"/interviews/react/doc/hooks","doc",false,"","React hooks","React hooks are functions that let you use React State, Lifecycle features, and other React capabilities in functional components.",{"type":11,"children":12,"toc":266},"root",[13,22,43,50,62,72,84,94,102,111,121,129,138,144,154,162,171,181,189,198,208,216,225,230,239,249,257],{"type":14,"tag":15,"props":16,"children":18},"element","h1",{"id":17},"react-hooks",[19],{"type":20,"value":21},"text","React Hooks",{"type":14,"tag":23,"props":24,"children":25},"p",{},[26,28,34,36,41],{"type":20,"value":27},"React hooks are functions that let you use ",{"type":14,"tag":29,"props":30,"children":31},"strong",{},[32],{"type":20,"value":33},"React State",{"type":20,"value":35},", ",{"type":14,"tag":29,"props":37,"children":38},{},[39],{"type":20,"value":40},"Lifecycle features",{"type":20,"value":42},", and other React capabilities in functional components.",{"type":14,"tag":44,"props":45,"children":47},"h3",{"id":46},"common-hooks",[48],{"type":20,"value":49},"Common Hooks",{"type":14,"tag":51,"props":52,"children":54},"h4",{"id":53},"usestate",[55],{"type":14,"tag":56,"props":57,"children":59},"code",{"className":58},[],[60],{"type":20,"value":61},"useState",{"type":14,"tag":63,"props":64,"children":65},"ul",{},[66],{"type":14,"tag":67,"props":68,"children":69},"li",{},[70],{"type":20,"value":71},"Manage state in function component",{"type":14,"tag":73,"props":74,"children":79},"pre",{"className":75,"code":77,"language":78,"meta":7},[76],"language-react","const [state, setState] = useState(\u003CINITIAL VALUE>);\n\nsetState(\u003CUPDATED VALUE>);\n\n","react",[80],{"type":14,"tag":56,"props":81,"children":82},{"__ignoreMap":7},[83],{"type":20,"value":77},{"type":14,"tag":51,"props":85,"children":87},{"id":86},"useeffect",[88],{"type":14,"tag":56,"props":89,"children":91},{"className":90},[],[92],{"type":20,"value":93},"useEffect",{"type":14,"tag":63,"props":95,"children":96},{},[97],{"type":14,"tag":67,"props":98,"children":99},{},[100],{"type":20,"value":101},"Handles side effects like data fetching, subscriptions, and manual DOM manipulations.",{"type":14,"tag":73,"props":103,"children":106},{"className":104,"code":105,"language":78,"meta":7},[76],"useEffect(() => {\n    // mount \n    return () => {\n        // unmount\n    }\n}, [DEPENDANCY ARRAY])\n\n",[107],{"type":14,"tag":56,"props":108,"children":109},{"__ignoreMap":7},[110],{"type":20,"value":105},{"type":14,"tag":51,"props":112,"children":114},{"id":113},"usecontext",[115],{"type":14,"tag":56,"props":116,"children":118},{"className":117},[],[119],{"type":20,"value":120},"useContext",{"type":14,"tag":63,"props":122,"children":123},{},[124],{"type":14,"tag":67,"props":125,"children":126},{},[127],{"type":20,"value":128},"Accesses context values without the need for a Consumer component.",{"type":14,"tag":73,"props":130,"children":133},{"className":131,"code":132,"language":78,"meta":7},[76],"    const value = useContext(MyContext)\n",[134],{"type":14,"tag":56,"props":135,"children":136},{"__ignoreMap":7},[137],{"type":20,"value":132},{"type":14,"tag":44,"props":139,"children":141},{"id":140},"performance-hooks",[142],{"type":20,"value":143},"Performance Hooks",{"type":14,"tag":51,"props":145,"children":147},{"id":146},"usememo",[148],{"type":14,"tag":56,"props":149,"children":151},{"className":150},[],[152],{"type":20,"value":153},"useMemo",{"type":14,"tag":63,"props":155,"children":156},{},[157],{"type":14,"tag":67,"props":158,"children":159},{},[160],{"type":20,"value":161},"Memoizes a value to optimize performance for expensive calculations.",{"type":14,"tag":73,"props":163,"children":166},{"className":164,"code":165,"language":78,"meta":7},[76],"    const [ number, setNumber] = useState(0);\n    setNumber(3)\n    const doubleNumber = useMemo(() => {\n        return number * 2;\n    }, [ number])\n",[167],{"type":14,"tag":56,"props":168,"children":169},{"__ignoreMap":7},[170],{"type":20,"value":165},{"type":14,"tag":51,"props":172,"children":174},{"id":173},"usecallback",[175],{"type":14,"tag":56,"props":176,"children":178},{"className":177},[],[179],{"type":20,"value":180},"useCallback",{"type":14,"tag":63,"props":182,"children":183},{},[184],{"type":14,"tag":67,"props":185,"children":186},{},[187],{"type":20,"value":188},"Memoizes a function to prevent unnecessary re-creations.",{"type":14,"tag":73,"props":190,"children":193},{"className":191,"code":192,"language":78,"meta":7},[76],"    const memoizedFunction = useCallback(() => {\n    \n    }, [ dependency ])\n",[194],{"type":14,"tag":56,"props":195,"children":196},{"__ignoreMap":7},[197],{"type":20,"value":192},{"type":14,"tag":51,"props":199,"children":201},{"id":200},"usetransition",[202],{"type":14,"tag":56,"props":203,"children":205},{"className":204},[],[206],{"type":20,"value":207},"useTransition",{"type":14,"tag":63,"props":209,"children":210},{},[211],{"type":14,"tag":67,"props":212,"children":213},{},[214],{"type":20,"value":215},"Helps manage transitions between UI states.",{"type":14,"tag":73,"props":217,"children":220},{"className":218,"code":219,"language":78,"meta":7},[76],"    const [ isPending, startTransition ] = useTransition();\n",[221],{"type":14,"tag":56,"props":222,"children":223},{"__ignoreMap":7},[224],{"type":20,"value":219},{"type":14,"tag":23,"props":226,"children":227},{},[228],{"type":20,"value":229},"Example",{"type":14,"tag":73,"props":231,"children":234},{"className":232,"code":233,"language":78,"meta":7},[76],"\nconst TransitionExample = () => {\n\n    const initalItems = [...Array(1000000).keys()];\n\n    const [ isPending, startTransition ] = useTransition();\n    \n    const [ items, setItems ] = useState(initialItems)\n\n    const handleSearchKeyWord = (event) => {\n        let value = event?.target?.value || 2;\n        startTransition(() => {\n            setItem((prevItems) => {\n                return initalItems.filter((_, index) => {\n                    return _%2value;\n                })\n            \n            })\n        })\n        \n    }\n\n    return (\n        \u003Cdiv className='transition-element'>\n            \u003Cdiv className=''>\n                \u003Cinput type='text' onChange={ handleSearchKeyWord }/>\n            \u003C/div>\n            { isPending && \u003Cdiv>Loading...\u003C/div>}\n            { !isPending && \u003Cdiv>\n                {\n                    items.map((item, index) => {\n                        \u003Cdiv key={`${item}-${index}}>\u003C/div>\n                    })                                        \n                }\n            \u003C/div>}\n        \u003C/div>\n    )\n}\n\n",[235],{"type":14,"tag":56,"props":236,"children":237},{"__ignoreMap":7},[238],{"type":20,"value":233},{"type":14,"tag":51,"props":240,"children":242},{"id":241},"usedeferredvalue",[243],{"type":14,"tag":56,"props":244,"children":246},{"className":245},[],[247],{"type":20,"value":248},"useDeferredValue",{"type":14,"tag":63,"props":250,"children":251},{},[252],{"type":14,"tag":67,"props":253,"children":254},{},[255],{"type":20,"value":256},"Defers updates for better responsiveness in UI-heavy apps.",{"type":14,"tag":73,"props":258,"children":261},{"className":259,"code":260,"language":78,"meta":7},[76],"const ImageGallery = () => {\n  const [selectedImage, setSelectedImage] = useState(null);\n  const deferredSelectedImage = useDeferredValue(selectedImage, { timeoutMs: 500 }); \n\n  const handleImageClick = (image) => {\n    setSelectedImage(image);\n  };\n\n  return (\n    \u003Cdiv>\n      {/* Image Thumbnails */}\n      \u003Cdiv>\n        {images.map((image) => (\n          \u003Cimg \n            key={image.id} \n            src={image.thumbnail} \n            alt={image.title} \n            onClick={() => handleImageClick(image)} \n          />\n        ))}\n      \u003C/div>\n\n      {/* Large Image Viewer */}\n      {deferredSelectedImage && (\n        \u003Cdiv>\n          \u003Cimg \n            src={deferredSelectedImage.url} \n            alt={deferredSelectedImage.title} \n          />\n        \u003C/div>\n      )}\n    \u003C/div>\n  );\n}\n\n",[262],{"type":14,"tag":56,"props":263,"children":264},{"__ignoreMap":7},[265],{"type":20,"value":260},{"title":7,"searchDepth":267,"depth":267,"links":268},2,[269,271],{"id":46,"depth":270,"text":49},3,{"id":140,"depth":270,"text":143},"markdown","content:interviews:react:doc:hooks.md","content","interviews/react/doc/hooks.md","interviews/react/doc/hooks","md",1736599027963]