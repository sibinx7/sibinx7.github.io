[{"data":1,"prerenderedAt":225},["ShallowReactive",2],{"content-query-7775McCcR6":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":7,"body":9,"_type":219,"_id":220,"_source":221,"_file":222,"_stem":223,"_extension":224},"/interviews/react/doc/optimization","doc",false,"","React Optimization",{"type":10,"children":11,"toc":212},"root",[12,21,25,32,35,42,48,58,64,69,78,84,89,98,104,109,137,149,155,178,184],{"type":13,"tag":14,"props":15,"children":17},"element","h2",{"id":16},"react-performance-improvements",[18],{"type":19,"value":20},"text","React Performance Improvements",{"type":13,"tag":22,"props":23,"children":24},"hr",{},[],{"type":13,"tag":26,"props":27,"children":29},"h3",{"id":28},"reactmemo-usememo-usecallback",[30],{"type":19,"value":31},"React.memo, useMemo, useCallback",{"type":13,"tag":22,"props":33,"children":34},{},[],{"type":13,"tag":36,"props":37,"children":39},"h4",{"id":38},"reactmemo",[40],{"type":19,"value":41},"React.memo",{"type":13,"tag":43,"props":44,"children":45},"p",{},[46],{"type":19,"value":47},"Optimizes functional components by memoizing their output to prevent unnecessary re-renders. If the props of the components don't change, React skips re-rendering it.\nFunctional components that rely only on props and avoid re-rendering if props remain the same",{"type":13,"tag":43,"props":49,"children":50},{},[51],{"type":13,"tag":52,"props":53,"children":55},"code",{"className":54},[],[56],{"type":19,"value":57},"Prevents re-renders of functional components",{"type":13,"tag":36,"props":59,"children":61},{"id":60},"usememo",[62],{"type":19,"value":63},"useMemo",{"type":13,"tag":43,"props":65,"children":66},{},[67],{"type":19,"value":68},"Memoizes a computed value to avoid recalculating it on every renders unless dependencies changes. Caches the result of an expensive calculation",{"type":13,"tag":43,"props":70,"children":71},{},[72],{"type":13,"tag":52,"props":73,"children":75},{"className":74},[],[76],{"type":19,"value":77},"Prevents expensive calculations from being re-executed",{"type":13,"tag":36,"props":79,"children":81},{"id":80},"usecallback",[82],{"type":19,"value":83},"useCallback",{"type":13,"tag":43,"props":85,"children":86},{},[87],{"type":19,"value":88},"Memoizes a function so that it retains the same references between renderts unless its dependencies changes. Prevent unnecessary recreation of functions, often useful when passing callbacks to child components",{"type":13,"tag":43,"props":90,"children":91},{},[92],{"type":13,"tag":52,"props":93,"children":95},{"className":94},[],[96],{"type":19,"value":97},"Prevent functions from being recreated unnessarily",{"type":13,"tag":36,"props":99,"children":101},{"id":100},"react-lazy",[102],{"type":19,"value":103},"React Lazy",{"type":13,"tag":43,"props":105,"children":106},{},[107],{"type":19,"value":108},"Enable code splitting in react applications by dynamically importing components. This helps in optimizing app performance by loading components only when they are needed.",{"type":13,"tag":110,"props":111,"children":112},"ul",{},[113,119,124],{"type":13,"tag":114,"props":115,"children":116},"li",{},[117],{"type":19,"value":118},"Code Splitting: Divides the application into smaller bundles to improve initial load time",{"type":13,"tag":114,"props":120,"children":121},{},[122],{"type":19,"value":123},"Dynamic Imports: The compoinent is not loaded until it is rendered",{"type":13,"tag":114,"props":125,"children":126},{},[127,129,135],{"type":19,"value":128},"Suspense Integration: Work with the ",{"type":13,"tag":52,"props":130,"children":132},{"className":131},[],[133],{"type":19,"value":134},"React.Suspense",{"type":19,"value":136}," components to show a falback UI while the lazy loaded components is being fetched.",{"type":13,"tag":138,"props":139,"children":144},"pre",{"className":140,"code":142,"language":143,"meta":7},[141],"language-react","\nimport React, { Suspense } from 'react';\n\nconst LazyComponent = React.lazy(() => import('./MyComponent'));\n\nconst App = () => {\n    return (\n        \u003Cdiv className='app'>\n            \u003CSuspense fallback={\u003Cdiv>Loading\u003C/div>}>\n                \u003CLazyComponent/>\n            \u003C/Suspense>\n        \u003C/div>\n    )\n}\n\n","react",[145],{"type":13,"tag":52,"props":146,"children":147},{"__ignoreMap":7},[148],{"type":19,"value":142},{"type":13,"tag":36,"props":150,"children":152},{"id":151},"react-performance-packages",[153],{"type":19,"value":154},"React performance packages",{"type":13,"tag":110,"props":156,"children":157},{},[158,163,168,173],{"type":13,"tag":114,"props":159,"children":160},{},[161],{"type":19,"value":162},"react-intersection-observer",{"type":13,"tag":114,"props":164,"children":165},{},[166],{"type":19,"value":167},"react-lazyload",{"type":13,"tag":114,"props":169,"children":170},{},[171],{"type":19,"value":172},"react-virtualized",{"type":13,"tag":114,"props":174,"children":175},{},[176],{"type":19,"value":177},"react-window",{"type":13,"tag":36,"props":179,"children":181},{"id":180},"performce-improvements",[182],{"type":19,"value":183},"Performce Improvements",{"type":13,"tag":110,"props":185,"children":186},{},[187,192,197,202,207],{"type":13,"tag":114,"props":188,"children":189},{},[190],{"type":19,"value":191},"Avoid inline function definition",{"type":13,"tag":114,"props":193,"children":194},{},[195],{"type":19,"value":196},"Throttling and debouncing events",{"type":13,"tag":114,"props":198,"children":199},{},[200],{"type":19,"value":201},"Add key to list rendering",{"type":13,"tag":114,"props":203,"children":204},{},[205],{"type":19,"value":206},"React SSR",{"type":13,"tag":114,"props":208,"children":209},{},[210],{"type":19,"value":211},"Use Web workers",{"title":7,"searchDepth":213,"depth":213,"links":214},2,[215],{"id":16,"depth":213,"text":20,"children":216},[217],{"id":28,"depth":218,"text":31},3,"markdown","content:interviews:react:doc:optimization.md","content","interviews/react/doc/optimization.md","interviews/react/doc/optimization","md",1736671972181]